name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        # Add additional build configurations here
        # See https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
        build_type: [ Release, Debug ]
        os: [ ubuntu-latest, macos-latest, windows-latest ]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Generate for Windows
        if: matrix.os == 'windows-latest'
        run: cmake -B ${{github.workspace}}/build -G "Visual Studio 17 2022" -A x64

      - name: Generate for Linux
        if: matrix.os == 'ubuntu-latest'
        run: cmake -B ${{github.workspace}}/build -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=${{matrix.build_type}}

      - name: Generate for macOS
        if: matrix.os == 'macos-latest'
        run: cmake -B ${{github.workspace}}/build -G "Xcode"

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{env.build_type}}

      - name: Test
        working-directory: ${{github.workspace}}/build
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C ${{env.build_type}}


